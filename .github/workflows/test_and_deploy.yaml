name: spectre-bridge-service test and deploy automatically

on:
  push:
    branches: ["feature/deploy"]
  pull_request:
    branches: ["feature/deploy"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.submodulessh }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args:  --manifest-path ./Cargo.toml --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args:  --manifest-path ./Cargo.toml -- -A clippy::too-many-arguments -D warnings
      - run: cargo build
      - run: cargo test
  deploy:
    runs-on: ubuntu-latest
    steps:
      - run: |
          export name=${GITHUB_REPOSITORY#*/}"-"${GITHUB_REF##*/}
          export key="ssh-key-spectre"
          export timestamp=$(date +%s)
          export host=${{secrets.spectrehost}}
          docker build . -t localhost:5000/${name}-${timestamp}
          echo "${{secrets.spectressh}}" > ${key}
          chmod 600 ${key}
          ssh -f -N -i ${key} -o "StrictHostKeyChecking no" ${host} -L 5000:127.0.0.1:5000
          docker push localhost:5000/${name}-${timestamp}
          ssh -i ${key} --o "StrictHostKeyChecking no" ${host} 'docker load -i '${name}'-'${timestamp}'.tar; docker stop '${name}' || true; docker run -d --restart always -p 4012:80 --name '${name}'-new '${name}'-'${timestamp}'; docker rm '${name}' || true; docker rmi $(docker images -q) || true; docker rename '${name}'-new '${name}'; rm '${name}'-'${timestamp}'.tar'
